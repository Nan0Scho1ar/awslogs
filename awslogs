#!/usr/bin/env bash
# Script for working with AWS logs

export max_log_streams=10
export max_log_events_per_stream=200

export output_format='["timestamp                                ", "message"],
                      ["-----------------------------------------", "-----------------------------------"],
         (.events[] | [(.timestamp / 1000 | strftime("%Y-%m-%d %H:%M:%S UTC") + strflocaltime(" (%I:%M:%S%p %Z)")), .message]) | @tsv'

export batcmd='bat -l log --wrap=never'

# Ensure required dependencies are installed
for program in fzf aws jq bat; do
    if ! which $program >/dev/null 2>&1; then
        echo "Error: This script requires '$program'. Please install it then try again."
        exit 1
    fi
done

fetch_logs() {
    # Choose an aws profile to use
    export AWS_PROFILE=$(aws configure list-profiles | fzf)

    # Choose a log group
    log_group_name=$(aws logs describe-log-groups | sed -n 's/.*logGroupName": "\(.*\)"./\1/p' | fzf)

    # Create output dir
    outdir="/tmp/aws_logs/$AWS_PROFILE/$log_group_name"
    export AWS_LOGS_DIR="${outdir/\/\//\/}" #Fix potential double slash
    mkdir -p $AWS_LOGS_DIR
    rm $AWS_LOGS_DIR/*

    # Fetch log streams in the chosen group.
    echo "Fetching logs for $log_group_name..."
    log_streams=$(
        aws logs describe-log-streams \
            --log-group-name "$log_group_name"  \
            --order-by LastEventTime \
            --descending \
            --max-items $max_log_streams \
            --output json \
        | sed -n 's/.*logStreamName": "\(.*\)",/\1/p'
    )

    # Fetch the logs from each of the log streams
    # Then format json log files to be human readable.
    for stream in $log_streams; do
        aws logs get-log-events \
        --log-group-name "$log_group_name" \
        --log-stream-name "$stream" \
        --limit $max_log_events_per_stream \
        --output json \
        | jq -r "$output_format" > $AWS_LOGS_DIR/${stream//\//_}.txt
    done

    # Display prettified log files to user
    $batcmd $AWS_LOGS_DIR/*.txt

    echo "Fetched logs can be found in dir '$outdir' for further searching and/or processing."
}

# Process command
cmd="$1"
shift
[ -z "$AWS_LOGS_DIR" ] && AWS_LOGS_DIR="$1" && shift
export AWS_LOGS_DIR="${AWS_LOGS_DIR%/}"
echo "AWS_LOGS_DIR=$AWS_LOGS_DIR"
regex="$1"
case $cmd in
    fetch)  fetch_logs ;;
    view)   $batcmd $AWS_LOGS_DIR/*.txt ;;
    today)  grep -h $(date -I) $AWS_LOGS_DIR/*.txt | sort | $batcmd ;;
    search) grep -h "$regex" $AWS_LOGS_DIR/*.txt | sort | $batcmd ;;
    *)
        echo "Invalid command."
        echo
        echo "Commands include:"
        echo "      awslogs fetch                         # Fetch logs from aws"
        echo "      awslogs view   /logs/dir/             # View the logs in /logs/dir/"
        echo "      awslogs today  /logs/dir/             # View all log entries in /logs/dir/ which occured today."
        echo "      awslogs search /logs/dir/ 'regex'     # Regex search the logs in /logs/dir/"
        echo
        echo "/logs/dir/ can be omitted from above subcommands if AWS_LOGS_DIR has been set to the relevant directory."
        ;;
esac


